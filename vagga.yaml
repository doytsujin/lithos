commands:

  make: !Command
    description: Build lithos in ubuntu container
    container: ubuntu
    run: [make]

  cargo: !Command
    description: Build lithos in ubuntu container
    container: ubuntu
    run: [cargo]

  build-ubuntu-package: !Command
    description: Build ubuntu (trusty) package
    container: ubuntu
    write-mode: transient-hard-link-copy
    run: |
      set -ex
      ver=$(git describe)
      [ -d dist ] || mkdir dist
      make bin-release
      checkinstall --default \
        --maintainer=paul@colomiets.name --pkglicense=MIT \
        --pkgname=lithos --nodoc --strip=no \
        --pkgver=${ver#v} \
        --pakdir=dist \
        make _install

  doc: !Command
    description: Build HTML docs
    container: docs
    work-dir: docs
    run: [make, html]

  make-docs: !Command
    description: Build
    container: ubuntu
    work-dir: docs
    run: [make]


containers:

  busybox:
    # This one is used as a container inside the lithos example
    setup:
    - !Alpine v3.1
    - !EnsureDir /config
    - !Text
      /config/sleep.yaml: |
          kind: Daemon
          user_id: 1
          volumes:
            /tmp: !Tmpfs { size: 100Mi }
          memory_limit: 104857600
          cpu_shares: 3
          executable: /bin/sleep
          arguments: [60]
          uid-map:
          - {inside: 0, outside: 1000, count: 1}
          - {inside: 1, outside: 1, count: 1}
          gid-map:
          - {inside: 0, outside: 100, count: 1}
      /config/busybox.yaml: |
          kind: Command
          user_id: 1
          volumes:
            /tmp: !Tmpfs { size: 100Mi }
          memory_limit: 104857600
          cpu_shares: 3
          executable: /bin/busybox
          uid-map:
          - {inside: 0, outside: 1000, count: 1}
          - {inside: 1, outside: 1, count: 1}
          gid-map:
          - {inside: 0, outside: 100, count: 1}

  ubuntu:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse
    - !Install [make, checkinstall, wget, gcc, libc6-dev, ca-certificates, git]
    - !TarInstall
      url: http://static.rust-lang.org/dist/rust-1.7.0-x86_64-unknown-linux-gnu.tar.gz
      script: "./install.sh --prefix=/usr --components=rustc,cargo \
               --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    environ:
      HOME: /work/target

  docs:
    setup:
    - !Alpine v3.1
    - !Install [py-sphinx, make]
    - !Py2Requirements "docs/requirements.txt"
