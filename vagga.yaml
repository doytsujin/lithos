commands:

  make: !Command
    description: Build lithos in ubuntu container
    container: ubuntu
    run: [make]

  _static-lithos_check-package: !Command
    description: Build static lithos_check package (.tar.gz)
    container: rust-musl
    run: |
      cargo build --target=x86_64-unknown-linux-musl
      tar -czf dist/lithos-check-$(git describe).tar.gz \
        -C target/x86_64-unknown-linux-musl/debug lithos_check

  cargo: !Command
    description: Build lithos in ubuntu container
    container: ubuntu
    run: [cargo]

  build-ubuntu-package: !Command
    description: Build ubuntu (xenial) package
    container: ubuntu
    write-mode: transient-hard-link-copy
    run: |
      set -ex
      ver=$(git describe)
      [ -d dist ] || mkdir dist
      make bin-release
      checkinstall --default \
        --maintainer=paul@colomiets.name --pkglicense=MIT \
        --pkgname=lithos --nodoc --strip=no \
        --pkgver=${ver#v} \
        --pakdir=dist \
        make _install

  doc: !Command
    description: Build HTML docs
    container: docs
    work-dir: docs
    run: [make, html]

  make-docs: !Command
    description: Build
    container: ubuntu
    work-dir: docs
    run: [make]


containers:

  py-example:
    # This one is used as a container inside the lithos example
    setup:
    - !Alpine v3.3
    - !Install [python3]
    - !EnsureDir /config
    - !EnsureDir /code
    - !Copy
      source: /work/examples/py/code/sock.py
      path: /code/sock.py
    - !Copy
      source: /work/examples/py/code/socket.yaml
      path: /config/socket.yaml

  ubuntu:
    setup:
    - !Ubuntu xenial
    - !UbuntuUniverse
    - !Install [make, checkinstall, wget, gcc, libc6-dev, ca-certificates, git]
    - !TarInstall
      url: http://static.rust-lang.org/dist/rust-1.8.0-x86_64-unknown-linux-gnu.tar.gz
      script: "./install.sh --prefix=/usr --components=rustc,cargo \
               --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    environ:
      HOME: /work/target

  rust-musl:
    environ: &rustenv
      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib
      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin
      HOME: /work/target
    setup:
    - !Ubuntu xenial
    - !Install [build-essential, ca-certificates, git]
    - !BuildDeps [cmake, libc++-dev, curl, autoconf, automake, libtool]
    # Build script derived from
    # https://github.com/rust-lang/rust-buildbot/blob/master/slaves/linux/build-musl.sh
    - !TarInstall
      url: http://www.musl-libc.org/releases/musl-1.1.14.tar.gz
      script: |
        ./configure --prefix=/musl --disable-shared
        make -j2
        make install

    - !Tar
      url: http://llvm.org/releases/3.8.0/llvm-3.8.0.src.tar.xz
      path: /tmp/llvm
    - !TarInstall
      url: http://llvm.org/releases/3.8.0/libunwind-3.8.0.src.tar.xz
      script: |
        cmake . -DLLVM_PATH=/tmp/llvm/llvm-3.8.0.src -DLIBUNWIND_ENABLE_SHARED=0
        make -j2
        cp lib/libunwind.a /musl/lib
    - !TarInstall
      url: "http://static.rust-lang.org/dist/rust-1.8.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "http://static.rust-lang.org/dist/rust-std-1.8.0-x86_64-unknown-linux-musl.tar.gz"
      script: "./install.sh --prefix=/musl \
               --components=rust-std-x86_64-unknown-linux-musl"
    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'

  docs:
    setup:
    - !Alpine v3.1
    - !Install [py-sphinx, make]
    - !Py2Requirements "docs/requirements.txt"
